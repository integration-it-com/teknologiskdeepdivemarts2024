# PowerShell Function App to Windows on Azure
# Build a PowerShell Function App and deploy it to Azure as a Windows function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-powershell

trigger:
  - master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: "c3eaa70a-d039-43d7-8ed9-6d3eb97d4080"

  # Function app name
  functionAppName: "firstfuncpowershell"

  # Agent VM image name
  vmImageName: "windows-2019"

  # Working Directory
  directory: "/DeepDiveFunctionAppPowershell"

stages:
  - stage: Build
    variables:
      - group: Common
      - name: workingDirectory
        value: "$(System.DefaultWorkingDirectory)$(directory)"
    displayName: Build stage

    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - powershell: |
              if (Test-Path "extensions.csproj") {
                  dotnet build extensions.csproj --output ./$(workingDirectory)/bin
              }
            displayName: "Build extensions"

          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: $(workingDirectory)
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()

    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: test
        pool:
          vmImage: $(vmImageName)

        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureFunctionApp@1
                  displayName: "Azure functions app deploy"
                  inputs:
                    azureSubscription: "$(azureSubscription)"
                    appType: functionApp
                    appName: $(functionAppName)
                    package: "$(Pipeline.Workspace)/drop/$(Build.BuildId).zip"
